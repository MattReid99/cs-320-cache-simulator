set_16way_noAlloc = (hexAddress >> 5) % 32;
tag_16way_noAlloc = hexAddress >> ((unsigned long)log2(32)+5);
index_16way_noAlloc = -1;
for (int i = 0; i < 16; i++) {
  if (cache_16way_noAlloc[set_16way_noAlloc][i].tag == tag_16way_noAlloc && cache_16way_noAlloc[set_16way_noAlloc][i].valid) {
    hits_16way_noAlloc++;
    index_16way_noAlloc = i;
    break;
  }
  if (!cache_16way_noAlloc[set_16way_noAlloc][i].valid && type == L) {
    index_16way_noAlloc = i;
    break;
  }
}
// if not found in cache, replace current value using LRU policy
if (type == L || index_16way_noAlloc != -1) {
if (index_16way_noAlloc == -1) {
  index_16way_noAlloc = getLRU(set_16way_noAlloc, cache_16way_noAlloc[set_16way_noAlloc], 16);
}
cache_16way_noAlloc[set_16way_noAlloc][index_16way_noAlloc].valid = true;
cache_16way_noAlloc[set_16way_noAlloc][index_16way_noAlloc].tag = tag_16way_noAlloc;
cache_16way_noAlloc[set_16way_noAlloc][index_16way_noAlloc].time = numIterations;
}
